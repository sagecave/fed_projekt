---
import { Image } from "astro:assets";
import InfomationBars from "./InfomationBars.astro";
import SmallBox from "./SmallBox.astro";
import easyBig from "../assets/images/its_easyBig.jpg";
import easySmallOne from "../assets/images/its_easySmall.jpg";
import easySmallTwo from "../assets/images/its_easySmall1.jpg";
---

<section>
  <div class="ContactContainer">
    <div class="ContactContent">
      <SmallBox boxContentP="Proccess" />
      <h2>Contact Us. Itâ€™s Easy.</h2>
      <p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative.</p>
      <div class="iconContainer">
        <InfomationBars />
        <InfomationBars contactIcons="clock" contectP="Monday To Friday" contactName="9AM - 5PM" />
        <InfomationBars contactIcons="location" contectP="USA Office" contactName="195 Devonshire St Boston, MA 02110" />
      </div>
    </div>
    <div class="imgGrid">
      <div class="ContactImgs">
        <div class="flexImgContainer">
          <Image src={easyBig} alt="/" />

          <div class="imgBlock">
            <Image src={easySmallOne} alt="/" />
            <Image src={easySmallTwo} alt="/" />
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  @media only screen and (max-width: 600px) {
    .ContactContainer {
      grid-column: 2/4;

      grid-template-columns: subgrid;
      display: grid;
    }
    .ContactContent {
      grid-column: 1 / 3;
      max-width: 100%;
    }
  }
  @media only screen and (min-width: 601px) {
    .ContactContainer {
      grid-column: 2/4;
      grid-template-columns: subgrid;
      display: grid;
    }
    .ContactContent {
      grid-column: 1;
      max-width: 70%;
    }
    .ContactContainer {
      position: relative;
      overflow: hidden;
      &::before {
        --square-count: 10;
        --square-size: 1.34rem;

        --_square-size: var(--square-size, 1rem);
        --_square-half: calc(var(--square-size) / 2);
        --_square-sum: calc(var(--square-count) * var(--square-size));
        z-index: 1;
        content: "";
        position: absolute;
        inset: -1.875rem -1.875rem auto auto;
        /*inline-size: calc(var(--square-count) * 1.34rem - .67rem);*/
        inline-size: calc(round(var(--_square-sum), var(--_square-size)) - var(--_square-half));
        aspect-ratio: 1;
        background: linear-gradient(135deg, #be965d, #976f40, #c99b61, #f0be7b, #ffcb85, #eebc79, #c0935b, #976f40) 0 0 / 100% 100%;
        mask:
          var(--square-pattern) 0 0 / var(--_square-size) var(--_square-size),
          var(--square-pattern) var(--_square-half) var(--_square-half) / var(--_square-size) var(--_square-size);
        /*clip-path: polygon(-3% 0%, 100% 0%, 100% 103%);*/
      }

      &::after {
        content: "";
        position: absolute;
        left: 39rem;
        bottom: -7rem;
        background: green;
        width: 10.25rem;
        height: 19.1875rem;
        border-radius: 10px;
        z-index: 1;
        transform: rotate(90deg);
      }
    }
  }
  :root {
    --square-pattern: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="red"><path d="M7.47662 4.02206C6.50635 3.05178 5.53232 2.07774 4.56205 1.10745C4.28482 0.83023 3.80905 0.83023 3.53183 1.10745C2.56155 2.07774 1.59128 3.04803 0.621002 4.02206C0.343781 4.29929 0.343781 4.77506 0.621002 5.05229C1.59128 6.02258 2.5653 6.99661 3.53558 7.9669C3.8128 8.24412 4.28857 8.24412 4.56579 7.9669C5.53607 6.99661 6.51009 6.02258 7.48037 5.05229C7.63022 4.90244 7.69016 4.73011 7.69016 4.56527C7.69016 4.55403 7.69016 4.54654 7.69016 4.5353C7.69016 4.52781 7.69016 4.51657 7.69016 4.50908C7.69016 4.34424 7.63022 4.17191 7.47662 4.02206ZM4.04881 6.41968C3.41944 5.79031 2.79382 5.16468 2.16445 4.5353C2.79382 3.90593 3.41944 3.2803 4.04881 2.65092C4.67818 3.2803 5.3038 3.90593 5.93317 4.5353C5.3038 5.16468 4.67818 5.79031 4.04881 6.41968Z"/></svg>');
  }
  section {
    padding: 3rem;
    background-color: var(--primary_white);
  }

  .iconContainer {
    display: flex;
    flex-direction: column;
    gap: 3.5rem;
  }
  .imgBlock {
    display: flex;
    flex-direction: column;

    gap: 1rem;
  }
  .ContactImgs {
    & img {
      width: 18rem;
      border-radius: 2rem;
      z-index: 2;
    }
  }
  .flexImgContainer {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    & img {
      width: 18rem;
      border-radius: 2rem;
      z-index: 2;
    }
    .imgBlock {
      & img {
        width: 18rem;
        border-radius: 2rem;
        z-index: 2;
      }
    }
  }
</style>
